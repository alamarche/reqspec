{
    "name": "reqspec",
    "description": "A requirements DSL language server to expedite and help guide requirements development",
    "author": {
        "name": "Andrew LaMarche",
        "email": "andrew@lamarche.dev",
        "url": "https://lamarche.dev"
    },
    "bugs": {
        "url": "https://github.com/alamarche/reqspec/issues"
    },
    "publisher": "lamarche.dev",
    "repository": {
        "type": "git",
        "url": "https://github.com/alamarche/reqspec"
    },
    "version": "0.0.1",
    "files": [
        "bin"
    ],
    "scripts": {
        "build": "tsc -b tsconfig.json",
        "watch": "tsc -b tsconfig.json --watch",
        "lint": "eslint src --ext ts",
        "langium:generate": "langium generate",
        "langium:watch": "langium generate --watch",
        "vscode:prepublish": "npm run build && npm run lint",
        "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
        "build:worker": "esbuild --minify ./out/language/main-browser.js --bundle --format=iife --outfile=./public/req-spec-server-worker.js",
        "prepare:public": "shx mkdir -p ./public && shx cp -fr ./src/static/* ./public/",
        "copy:monaco-editor-wrapper": "shx cp -fr ./node_modules/monaco-editor-wrapper/bundle ./public/monaco-editor-wrapper",
        "copy:monaco-workers": "shx cp -fr ./node_modules/monaco-editor-workers/dist/ ./public/monaco-editor-workers",
        "copy:monarch-syntax": "shx cp -fr ./out/syntaxes/ ./public/syntaxes",
        "build:web": "npm run build && npm run build:monarch && npm run prepare:public && npm run build:worker && npm run copy:monaco-editor-wrapper && npm run copy:monaco-workers && npm run copy:monarch-syntax",
        "build:monarch": "tsc -b tsconfig.monarch.json",
        "serve": "node ./out/web/app.js"
    },
    "dependencies": {
        "@types/uuid": "^9.0.5",
        "chalk": "~4.1.2",
        "commander": "~10.0.0",
        "express": "~4.18.2",
        "langium": "~1.2.0",
        "monaco-editor-workers": "~0.34.2",
        "monaco-editor-wrapper": "~1.6.0",
        "uuid": "^9.0.1",
        "vscode-languageclient": "~8.0.2",
        "xml": "^1.0.1"
    },
    "devDependencies": {
        "@types/express": "^4.17.17",
        "@types/node": "~16.18.11",
        "@types/vscode": "~1.67.0",
        "@typescript-eslint/eslint-plugin": "~5.51.0",
        "@typescript-eslint/parser": "~5.51.0",
        "esbuild": "^0.16.17",
        "eslint": "~8.33.0",
        "langium-cli": "~1.2.0",
        "shx": "^0.3.4",
        "typescript": "~4.9.5",
        "vsce": "^2.15.0"
    },
    "displayName": "reqspec",
    "engines": {
        "vscode": "^1.67.0",
        "node": ">=14.0.0"
    },
    "categories": [
        "Programming Languages"
    ],
    "contributes": {
        "configuration": {
            "title": "ReqSpec",
            "properties": {
                "reqspec.polarion.syncMode": {
                    "type": "string",
                    "enum": ["REST API", "SOAP API", "SVN", "DISABLED"],
                    "order": 0,
                    "enumDescriptions": [
                        "Sync/Write/Read commands act via Polarion REST interface",
                        "Sync/Write/Read commands act via Polarion SOAP interface",
                        "Sync/Write/Read commands act on checked out SVN file directory",
                        "Default - no Polarion project"
                    ],
                    "default": "DISABLED",
                    "description": "Desired way to send/receive information to the Polarion project"
                },
                "reqspec.polarion.projectDirectory": {
                    "type": "string",
                    "order": 1,
                    "default": "null",
                    "description": "Absolute path to associated Polarion project directory"
                },
                "reqspec.polarion.projectId": {
                    "type": "string",
                    "default": "null",
                    "order": 2,
                    "description": "Polarion project ID - used in REST/SOAP queries"
                },
                "reqspec.polarion.restEndpoint": {
                    "type": "string",
                    "default": "null",
                    "order": 3,
                    "description": "Base URL to Polarion for REST queries"
                },
                "reqspec.polarion.soapEndpoint": {
                    "type": "string",
                    "default": "null",
                    "order": 4,
                    "description": "Base URL to Polarion for SOAP queries",
                    "editPresentation": "singlelineText"
                },
                "reqspec.reqif.typeMapping": {
                    "type": "string",
                    "default": "null",
                    "order": 5,
                    "description": "Absolute path to a ReqIF type mapping file for use in ReqSpec round-trips"
                },
                "reqspec.reqif.typeLinkMapping": {
                    "type": "string",
                    "default": "null",
                    "order": 6,
                    "description": "Absolute path to a ReqIF type-link mapping file for use in ReqSpec round-trips"
                },
                "reqspec.userconfig.snippets": {
                    "type": "object",
                    "description": "User-defined autocomplete snippets and their associated scopes for use in ReqSpec",
                    "order": 7,
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "scope": {
                                "type": "string",
                                "enum": [
                                    "AstNode", 
                                    "Requirement", "RequirementDocument", "RequirementSet", 
                                    "Goal", "GoalDocument", "GoalSet", 
                                    "Component", "Hazard"
                                ]
                            },
                            "snippets": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "uniqueItems": true,
                                    "properties": {
                                        "name": {"type": "string"},
                                        "content": {"type": "string"},
                                        "documentation": {"type": "string"}
                                    }
                                }
                            }
                        }
                    }


                },
                "reqspec.grammar.additionalProperties": {
                    "$comment": "TODO - Need to complete",
                    "type": "array",
                    "order": 8,
                    "default": "null",
                    "description": ""
                },
                "reqspec.grammar.additionalTypes": {
                    "$comment": "TODO - Need to complete",
                    "type": "array",
                    "order": 9,
                    "default": "null",
                    "description": ""
                }
            }
        },
        "commands": [
            {
                "command": "reqspec.toSphinxNeeds",
                "title": "Exports ReqSpec Goals/Requirements to Sphinx-Needs format",
                "shortTitle": "To Sphinx-Needs"
            }
        ],
        "languages": [
            {
                "id": "req-spec",
                "aliases": [
                    "ReqSpec",
                    "req-spec"
                ],
                "extensions": [
                    ".reqspec"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "req-spec",
                "scopeName": "source.req-spec",
                "path": "./syntaxes/req-spec.tmLanguage.json"
            }
        ]
    },
    "activationEvents": [
        "onLanguage:req-spec",
        "onCommand:reqspec.toSphinxNeeds"
    ],
    "main": "./out/extension/main.js",
    "bin": {
        "req-spec-cli": "./bin/cli"
    }
}
